---
- name: Update Proxmox hosts and reboot if needed (one host at a time)
  hosts: proxmox_hosts
  become: yes
  serial: 1
  tasks:
    - name: Disable Proxmox enterprise repositories
      block:
        - name: Check if pve-enterprise.list exists
          stat:
            path: /etc/apt/sources.list.d/pve-enterprise.list
          register: pve_enterprise_list

        - name: Comment out Proxmox enterprise repository if file exists
          lineinfile:
            path: /etc/apt/sources.list.d/pve-enterprise.list
            regexp: "^deb.*pve-enterprise"
            line: "# deb https://enterprise.proxmox.com/debian/pve trixie pve-enterprise"
            state: present
            backup: yes
          when: pve_enterprise_list.stat.exists
          notify: update package cache

        - name: Check if proxmox.sources exists
          stat:
            path: /etc/apt/sources.list.d/proxmox.sources
          register: proxmox_sources

        - name: Comment out enterprise repository in proxmox.sources
          lineinfile:
            path: /etc/apt/sources.list.d/proxmox.sources
            regexp: "^Types: deb"
            line: "# Types: deb"
            state: present
            backup: yes
          when: proxmox_sources.stat.exists
          notify: update package cache

        - name: Comment out enterprise URIs in proxmox.sources
          lineinfile:
            path: /etc/apt/sources.list.d/proxmox.sources
            regexp: '^URIs: https://enterprise\.proxmox\.com'
            line: "# URIs: https://enterprise.proxmox.com/debian/pve"
            state: present
            backup: yes
          when: proxmox_sources.stat.exists
          notify: update package cache

    - name: Ensure no-enterprise repository is enabled
      block:
        - name: Check if proxmox.sources exists
          stat:
            path: /etc/apt/sources.list.d/proxmox.sources
          register: proxmox_sources_check

        - name: Check if pve-no-subscription.list exists
          stat:
            path: /etc/apt/sources.list.d/pve-no-subscription.list
          register: pve_no_subscription_list

        - name: Remove duplicate pve-no-subscription.list if proxmox.sources exists
          file:
            path: /etc/apt/sources.list.d/pve-no-subscription.list
            state: absent
          when: proxmox_sources_check.stat.exists

        - name: Update proxmox.sources to use no-subscription repository
          blockinfile:
            path: /etc/apt/sources.list.d/proxmox.sources
            marker: "# {mark} ANSIBLE MANAGED BLOCK"
            block: |
              Types: deb
              URIs: http://download.proxmox.com/debian/pve
              Suites: trixie
              Components: pve-no-subscription
            state: present
            backup: yes
          when: proxmox_sources_check.stat.exists
          notify: update package cache

        - name: Create pve-no-subscription.list if proxmox.sources doesn't exist
          file:
            path: /etc/apt/sources.list.d/pve-no-subscription.list
            state: touch
            mode: "0644"
          when: not proxmox_sources_check.stat.exists

        - name: Add no-subscription repository line to pve-no-subscription.list
          lineinfile:
            path: /etc/apt/sources.list.d/pve-no-subscription.list
            regexp: "^deb.*pve-no-subscription"
            line: "deb http://download.proxmox.com/debian/pve trixie pve-no-subscription"
            state: present
            backup: yes
          when: not proxmox_sources_check.stat.exists
          notify: update package cache

    - name: Disable Proxmox subscription check
      lineinfile:
        path: /etc/apt/apt.conf.d/99pve-nosubscription
        regexp: '^Acquire::https::proxy::enterprise\.proxmox\.com'
        line: 'Acquire::https::proxy::enterprise.proxmox.com::Verify-Peer "false";'
        state: present
        create: yes
        backup: yes

    - name: Remove subscription key if present
      file:
        path: /etc/apt/trusted.gpg.d/proxmox-ve-release-enterprise.gpg
        state: absent

    - name: Find and disable all enterprise repositories
      shell: |
        find /etc/apt/sources.list.d/ -name "*.list" -o -name "*.sources" | xargs grep -l "enterprise.proxmox.com" 2>/dev/null || true
      register: enterprise_files
      changed_when: false

    - name: Comment out all enterprise repository lines
      shell: |
        for file in {{ enterprise_files.stdout_lines }}; do
          if [ -f "$file" ]; then
            sed -i.bak 's|^deb.*enterprise\.proxmox\.com|# &|g' "$file"
            sed -i.bak 's|^Types: deb|# Types: deb|g' "$file"
            sed -i.bak 's|^URIs: https://enterprise\.proxmox\.com|# &|g' "$file"
          fi
        done
      when: enterprise_files.stdout_lines | length > 0
      notify: update package cache

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: dist

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot if required
      reboot:
      when: reboot_required.stat.exists

    - name: Verify enterprise repositories are disabled (only if file exists)
      shell: |
        if [ -f /etc/apt/sources.list.d/pve-enterprise.list ]; then
          grep -q "^#.*pve-enterprise" /etc/apt/sources.list.d/pve-enterprise.list
        else
          true
        fi
      register: enterprise_disabled
      failed_when: enterprise_disabled.rc != 0

    - name: Verify no-subscription repository is enabled
      shell: |
        if [ -f /etc/apt/sources.list.d/proxmox.sources ]; then
          grep -q "pve-no-subscription" /etc/apt/sources.list.d/proxmox.sources
        elif [ -f /etc/apt/sources.list.d/pve-no-subscription.list ]; then
          grep -q "^deb.*pve-no-subscription" /etc/apt/sources.list.d/pve-no-subscription.list
        else
          false
        fi
      register: no_subscription_enabled
      failed_when: no_subscription_enabled.rc != 0

    - name: Display verification results
      debug:
        msg:
          - "Enterprise repositories disabled: {{ enterprise_disabled.rc == 0 }}"
          - "No-subscription repository enabled: {{ no_subscription_enabled.rc == 0 }}"

  handlers:
    - name: update package cache
      apt:
        update_cache: yes
