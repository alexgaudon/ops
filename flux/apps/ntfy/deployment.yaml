apiVersion: apps/v1
kind: Deployment
metadata:
  name: ntfy
  namespace: ntfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ntfy
  template:
    metadata:
      labels:
        app: ntfy
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: ntfy
          image: binwiederhier/ntfy:latest
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          ports:
            - containerPort: 80
          args:
            - serve
            - --auth-file=/var/lib/ntfy/auth.db
            - --auth-default-access=deny-all
            - --behind-proxy
            - --web-root=disable
            - --upstream-base-url=https://ntfy.sh
            - --base-url=https://ntfy.misery.systems
            - --cache-file=/var/lib/ntfy/cache.db
          # Health checks
          livenessProbe:
            httpGet:
              path: /v1/health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /v1/health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          # Resource limits and requests
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          volumeMounts:
            - name: ntfy-data
              mountPath: /var/lib/ntfy
          # Timeout settings
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "5"]
      volumes:
        - name: ntfy-data
          persistentVolumeClaim:
            claimName: ntfy-data-pvc
